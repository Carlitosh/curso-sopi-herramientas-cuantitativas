x = random(0,1,100)
x = rnorm(100)
x
y = sin(x)
y
plot(x,y)
lm(y~x)
lm(y~x+b)
lm(y~x)
model <- lm(y~x)
model$residuals
summary(model)
plot(x,y)+plot(model)
qqnorm(y)
qqnorm(x)
qqnorm(model)
qqnorm(x)
qqnorm(y)
qqplot(x,y)
qqplot(y,x)
asin(y)
z <- asin(y)
plot(x,z)
citation()
citation("rgdal")
citation("RSToolbox")
citation("RStoolbox")
setwd("~/Documents/curso-sopi-herramientas-cuantitativas/material/imagenes")
?rasterImage
library(raster)
l8 <- brick("l1_l8_oli_20130819.tif")
l8
names(l8)
names(l8) <- c(482,561,654,864,1608,2200)
names(l8)
names(l8) <- c("482","561","654","864","1608","2200")
names(l8)
plotRGB(l8)
plotRGB(l8, stretch='lin')
install.packages(c("landsat", "landsat8"))
library(landsat)
?landsat
library(RStoolbox)
b3 <- as.data.frame(l8$X654)
b4 <- as.data.frame(l8$X864)
bsl_test <- BSL(b3,b4)
bsl_test <- BSL(b3,b4, method="minimun")
bsl_test <- BSL(b3,b4, method="quantile", ulimit=0.99, llimit=0.005)
b3
bsl_test <- BSL(b3$X654,b4$X864, method="quantile", ulimit=0.99, llimit=0.005)
data(nov3)
nov3
data(nov4)
data(nov3)
data(nov4)
nov.bsl <- BSL(nov3, nov4)
plot(as.vector(as.matrix(nov3)), as.vector(as.matrix(nov4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
as.data.frame(nov3)
nov.bsl
l8 <- brick("l1_l8_oli_20130819.tif", na.rm=TRUE)
names(l8) <- c("482","561","654","864","1608","2200")
l8
b3 <- as.data.frame(l8$X654)
b4 <- as.data.frame(l8$X864)
bsl(b3,b4)
BSL(b3,b4)
b3
b3 <- 255/10000*b3
b3
b3 <- int(255/10000*b3)
b3 <- integer(255/10000*b3)
b3 <- integer(b3)
b3
b4 <- 255/10000*b4
BSL(b3,b4)
data(nov3)
data(nov4)
nov.bsl <- BSL(b3, b4)
plot(as.vector(as.matrix(b3)), as.vector(as.matrix(b4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov.bsl
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.99, llimit=0.005)
nov.bsl
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.99, llimit=0.02)
nov.bsl
(b3 > 0.1)
(b3 > 0.1)*b3
(b3 > 0.1 & b4 > 0.1)*b3
b3a<-(b3 > 25 & b4 > 25)*b3
b4a<-(b3 > 25 & b4 > 25)*b4
BSL(b3a,b4a)
> b3a<-(b3 > 100 & b4 > 100)*b3
> b4a<-(b3 > 100 & b4 > 100)*b4
> BSL(b3a,b4a)
b3a<-(b3 > 100 & b4 > 100)*b3
b4a<-(b3 > 100 & b4 > 100)*b4
BSL(b3a,b4a)
b3a
b3
b3<10
b3<10 ==true
BSL(b3,b4, method="minimun")
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.95, llimit=0.005)
nov.bsl
b4
setwd("~/")
l8 <- brick("pepe.tif")
plotRGB(l8)
plotRGB(l8, stretch='lin')
l8
summary(l8)
l9 <- round(l8*255/10000, digits=0)
l9
BSL(l9$pepe.3, l9$pepe.4)
BSL(as.data.frame(l9$pepe.3), as.data.frame(l9$pepe.4))
a3<- as.data.frame(l9$pepe.3)
a4<- as.data.frame(l9$pepe.4)
data(nov3)
data(nov4)
nov.bsl <- BSL(a3, a4)
plot(as.vector(as.matrix(a3)), as.vector(as.matrix(a4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
l8 <- brick("pepe2.tif")
l9 <- round(l8*255/10000, digits=0)
a3<- as.data.frame(l9$pepe.3)
a3<- as.data.frame(l9$pepe2.3)
a4<- as.data.frame(l9$pepe2.4)
data(nov3)
data(nov4)
nov.bsl <- BSL(a3, a4)
plot(as.vector(as.matrix(a3)), as.vector(as.matrix(a4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov.bsl
nov.bsl <- BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.005)
BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.005)
BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.01)
BSL(a3, a4, method="quantile", ulimit = 0.80, llimit = 0.01)
BSL(a3, a4, method="quantile", ulimit = 0.50, llimit = 0.1)
library(raster)
library("landsat", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("landsat8", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RStoolbox", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
l8 <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
l8 <- readOGR(dsn="./",layer = "pepe")
l8 <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
vec <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
vec <- readOGR(dsn="./",layer = "pepe")
plotRGB(l8, stretch="lin")
ggRGB(l8, stretch="lin")
ggRGB(l8, r=3, g=2, b=1, stretch="lin",maxpixels = 1e+5)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)
library(ggplot2)
df_poly <- fortify(l8)
df_poly <- fortify(vec)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=lat, y=long))
vec
vec <- readOGR(dsn="./",layer = "pepe2")
vec
df_poly <- fortify(vec)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=lat, y=long))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)
df_poly
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=piece))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id),col='red')
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id),col='red')+coord_equal()
l8[vec]
mean(l8[vec])
extract(l8,vec)
extract(l8,vec,fun=mean)
plot(extract(l8,vec,fun=mean))
data <- extract(l8,vec,fun=mean)
data
data.T
data@names
names(data)
as.data.frame(data)
data <- as.data.frame(data)
data
names(data)
names(data) <- c(450,512,650,850,1600,2200)
names(data)
plot(data)
data
library(lattice)
plot(data)
x <- names(data)
x
y <- data[1]
y
y <- data[1:-1]
y <- data[1]
y <- data[:]
y <- data[1:6]
y
plot(x,y)
plot(data$names,data)
plot(data$names,data[1:6])
plot(names(data),data[1:6])
data <- extract(l8,vec,fun=mean)
x <- [450,512,650,850,1600,2200]
x <- c(450,512,650,850,1600,2200)
x
plot(x,data)
sd <- extract(l8,vec,fun=sd)
sd
sd <- extract(l8,vec,fun=summary)
sd
sd <- extract(l8,vec,fun=hist)
extract(l8,vec,fun=hist)
warnings()
extract(l8,vec,fun=qqnorm)
extract(l8,vec,fun=box)
extract(l8$l8_oli_20131107.1,vec,fun=box)
extract(l8$l8_oli_20131107.1,vec,fun=boxplot)
extract(l8,vec,fun=boxplot)
box <- extract(l8,vec,fun=boxplot)
box[1]
box[2]
box[3]
box[4]
box[1:6]
show(box[1:6])
plot(box[1:6])
View(box)
View(box)
View(box)
b1 <- extract(l8,vec,fun=boxplot)
b1
show(b1)
vec <- readOGR(dsn="./",layer = "pepe2")
extract(l8,vec,fun=mean)
extract(l8,vec,fun=c("mean","sd"))
extract(l8,vec)
data <- extract(l8,vec)
summary(data)
data1 <- extract(l8,vec)
data1
data <- extract(l8$l8_oli_20131107.4,vec)
data
summary(data)
mean(data)
mean(data1)
data
data[1]
mean(data[1])
pepe <- as.data.frame(data)
pepe
as.matrix(data[1])
as.array(data[1])
mean(as.array(data[1]))
library(reshape)
library(reshape2)
pepe <- melt(data)
pepe
unique(pepe)
unique(pepe$L1)
boxplot(pepe)
boxplot(pepe$value)
boxplot(x = pepe$L1, y=pepe$value)
box(pepe)
plot(pepe)
graphics::boxplot(pepe)
aggregate(pepe)
aggregate(pepe, FUN=mean)
aggregate(pepe, FUN=mean, by= L1)
aggregate(pepe, FUN=mean, by= "L1")
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)[2]
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)[1]
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)
aggregate(pepe$value, by=list(pepe$L1), FUN=mean)
aggregate(pepe$value, by=list(pepe$L1), FUN=c(mean,sd))
aggregate(pepe$value, by=list(pepe$L1), FUN= function(x) c(mn = mean(x), sd = sd(x) ) )
(5.4-x)*(6.1-x)-4.5**2=0
(5.4-x)*(6.1-x)-4.5**2
eigen(cbind(c(5.4,4.5), c(4.5,6.1)))
cbind(c(5.4,4.5), c(4.5,6.1))
A<-cbind(c(5.4,4.5), c(4.5,6.1))
eigen(A)
A<-cbind(c(28.0,4.2), c(4.2,16.4))
eigen(A)
10.26+1.24
1.24/11.5
29.36+15.04
15.04/44.4
install.packages("hsdar")
#install.packages("hsdar")
install.packages("hsdar")
library(landsat)
library(raster)
nov3 <- as.data.frame(raster("LT52280791989017CUB00/LT52280791989017CUB00_B3.TIF"))
nov4 <- as.data.frame(raster("LT52280791989017CUB00/LT52280791989017CUB00_B4.TIF"))
BSL(nov3,nov4)
plot(as.vector(as.matrix(nov3)), as.vector(as.matrix(nov4)))
abline(nov.bsl$BSL, col="red")
nov.bsl <- BSL(nov3,nov4)
nov.bsl
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov3
nov.bsl
1**2+1.05**2
sqrt(2.1025)
1/1.45
1.05/1.45
.6897/.7241
1**2+0.9525**2
1/1.9073
sqrt(1**2+0.9525**2)
1/1.3810
0.9525/1.3810
0.6897**2+0.7241**2
0.7241**2+0.6897**2
0.6897*0.7241*0.7241*0.6897
0.6897*0.7241-0.7241*0.6897
library(raster)
library(landsat)
brick("test/curso2/LT52300771992104CUB00/LT52300771992104CUB00 (copy).vrt")
l5 <- brick("test/curso2/LT52300771992104CUB00/LT52300771992104CUB00 (copy).vrt")
nov.bsl <- BSL(as.matrix(l5$LT52300771992104CUB00_.copy..3),as.matrix(l5$LT52300771992104CUB00_.copy..4) )
nov.bsl
plot(l5$LT52300771992104CUB00_.copy..3, l5$LT52300771992104CUB00_.copy..4)
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
demo()
Hershey
Hershey()
plotmath
plotmath()
persp
persp()
error.chatching
setwd("~/test/material/raster_data/LC82300772015071")
raster("LC82300772015071LGN00_cfmask.tif")
library(raster)
raster("LC82300772015071LGN00_cfmask.tif")
mask <- raster("LC82300772015071LGN00_cfmask.tif")
mask[mask==0] <- NA
mask
l8 <- brick("LC82300772015071LGN00.vrt")
l8.mask <- raster("LC82300772015071LGN00_cfmask.tif")
l8.mask[l8.mask==0] <- NA
l8
l8.mask
l8.masked <- mask(l8, l8.mask, inverse=TRUE)
names(l8.masked) <- c(1,2,3,4,5,6)
l8
l8.masked
plot(l8.masked$X3, l8.masked$X4)
library(landsat)
l8.bsl <- BSL(as.matrix(l8.masked$X3),as.matrix(l8.masked$X4))
l8.masked[l8.masked <=0 ] <- NA
l8.masked
l8.masked <- l8.masked/1e4
plot(l8.masked$X3, l8.masked$X4)
plot(l8.masked$layer.3, l8.masked$layer.4)
l8.masked[is.na(l8.masked)] <- 255
l8.bsl <- BSL(as.matrix(l8.masked$X3),as.matrix(l8.masked$X4))
l8.bsl <- BSL(as.matrix(l8.masked$layer.3),as.matrix(l8.masked$layer.4))
l8.bsl
l8
l8 <- l8/1e4
plot(l8$LC82300772015071LGN00.3, l8$LC82300772015071LGN00.4)
abline(l8.bsl$BSL, col="red")
l8 <- brick("pepe.vrt")
plot(l8$pepe.3, l8$pepe.4)
l8
l8.mask <- raster("LC82300772015071LGN00_cfmask.tif")
l8.mask[l8.mask==0] <- NA
l8.masked <- mask(l8, l8.mask, inverse=TRUE)
plot(l8.masked$pepe.3, l8.masked$pepe.4)
l8
l8.masked[l8.masked <=0 ] <- NA
l8.masked <- l8.masked/1e4
l8.masked
l8.masked[is.na(l8.masked)] <- 255
l8 <- l8/1e4
l8
plot(l8$pepe.3, l8$pepe.4)
l8.masked
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4))
l8.bsl
abline(l8.bsl$BSL, col="red")
plot(l8$pepe.3, l8$pepe.4)
plot(l8$pepe.3, l8$pepe.4, maxpixels=2e4)
plot(l8$pepe.3, l8$pepe.4, maxpixels=2e5)
plot(l8$pepe.3, l8$pepe.4, maxpixels=1e6)
abline(l8.bsl$BSL, col="red")
abline(l8.bsl$BSL, col="red", method="quantile", ulimit=0.99, llimit=0.005)
plot(l8$pepe.3, l8$pepe.4)
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4),method="quantile", ulimit=0.99, llimit=0.005)
l8.bsl
abline(l8.bsl$BSL, col="red")
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4),method="quantile", ulimit=0.99, llimit=0.05)
l8.bsl
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4),method="quantile", ulimit=0.99, llimit=0.05)
abline(l8.bsl$BSL, col="red")
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4),method="quantile", ulimit=0.99, llimit=0.001)
l8.bsl
abline(l8.bsl$BSL, col="green")
l8.bsl <- BSL(as.matrix(l8.masked$pepe.3),as.matrix(l8.masked$pepe.4),method="quantile", ulimit=0.90, llimit=0.001)
l8.bsl
abline(l8.bsl$BSL, col="blue")
plot(l8$pepe.3, l8$pepe.4, maxpixels=5e6)
abline(l8.bsl$BSL, col="blue")
