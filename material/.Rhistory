plot(as.vector(as.matrix(b3)), as.vector(as.matrix(b4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov.bsl
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.99, llimit=0.005)
nov.bsl
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.99, llimit=0.02)
nov.bsl
(b3 > 0.1)
(b3 > 0.1)*b3
(b3 > 0.1 & b4 > 0.1)*b3
b3a<-(b3 > 25 & b4 > 25)*b3
b4a<-(b3 > 25 & b4 > 25)*b4
BSL(b3a,b4a)
> b3a<-(b3 > 100 & b4 > 100)*b3
> b4a<-(b3 > 100 & b4 > 100)*b4
> BSL(b3a,b4a)
b3a<-(b3 > 100 & b4 > 100)*b3
b4a<-(b3 > 100 & b4 > 100)*b4
BSL(b3a,b4a)
b3a
b3
b3<10
b3<10 ==true
BSL(b3,b4, method="minimun")
nov.bsl <- BSL(b3, b4, method="quantile", ulimit=0.95, llimit=0.005)
nov.bsl
b4
setwd("~/")
l8 <- brick("pepe.tif")
plotRGB(l8)
plotRGB(l8, stretch='lin')
l8
summary(l8)
l9 <- round(l8*255/10000, digits=0)
l9
BSL(l9$pepe.3, l9$pepe.4)
BSL(as.data.frame(l9$pepe.3), as.data.frame(l9$pepe.4))
a3<- as.data.frame(l9$pepe.3)
a4<- as.data.frame(l9$pepe.4)
data(nov3)
data(nov4)
nov.bsl <- BSL(a3, a4)
plot(as.vector(as.matrix(a3)), as.vector(as.matrix(a4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
l8 <- brick("pepe2.tif")
l9 <- round(l8*255/10000, digits=0)
a3<- as.data.frame(l9$pepe.3)
a3<- as.data.frame(l9$pepe2.3)
a4<- as.data.frame(l9$pepe2.4)
data(nov3)
data(nov4)
nov.bsl <- BSL(a3, a4)
plot(as.vector(as.matrix(a3)), as.vector(as.matrix(a4)))
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov.bsl
nov.bsl <- BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.005)
BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.005)
BSL(a3, a4, method="quantile", ulimit = 0.99, llimit = 0.01)
BSL(a3, a4, method="quantile", ulimit = 0.80, llimit = 0.01)
BSL(a3, a4, method="quantile", ulimit = 0.50, llimit = 0.1)
library(raster)
library("landsat", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("landsat8", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("RStoolbox", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
l8 <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
l8 <- readOGR(dsn="./",layer = "pepe")
l8 <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
vec <- brick("Documents/curso-sopi-herramientas-cuantitativas/material/imagenes/l8_oli_20131107.tif")
vec <- readOGR(dsn="./",layer = "pepe")
plotRGB(l8, stretch="lin")
ggRGB(l8, stretch="lin")
ggRGB(l8, r=3, g=2, b=1, stretch="lin",maxpixels = 1e+5)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)
library(ggplot2)
df_poly <- fortify(l8)
df_poly <- fortify(vec)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=lat, y=long))
vec
vec <- readOGR(dsn="./",layer = "pepe2")
vec
df_poly <- fortify(vec)
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=lat, y=long))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)
df_poly
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=piece))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id))
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id),col='red')
ggRGB(l8, r=3, g=2, b=1, maxpixels = 1e+5, geom_raster = TRUE)+geom_path(data=df_poly, aes(x=long, y=lat, group=id),col='red')+coord_equal()
l8[vec]
mean(l8[vec])
extract(l8,vec)
extract(l8,vec,fun=mean)
plot(extract(l8,vec,fun=mean))
data <- extract(l8,vec,fun=mean)
data
data.T
data@names
names(data)
as.data.frame(data)
data <- as.data.frame(data)
data
names(data)
names(data) <- c(450,512,650,850,1600,2200)
names(data)
plot(data)
data
library(lattice)
plot(data)
x <- names(data)
x
y <- data[1]
y
y <- data[1:-1]
y <- data[1]
y <- data[:]
y <- data[1:6]
y
plot(x,y)
plot(data$names,data)
plot(data$names,data[1:6])
plot(names(data),data[1:6])
data <- extract(l8,vec,fun=mean)
x <- [450,512,650,850,1600,2200]
x <- c(450,512,650,850,1600,2200)
x
plot(x,data)
sd <- extract(l8,vec,fun=sd)
sd
sd <- extract(l8,vec,fun=summary)
sd
sd <- extract(l8,vec,fun=hist)
extract(l8,vec,fun=hist)
warnings()
extract(l8,vec,fun=qqnorm)
extract(l8,vec,fun=box)
extract(l8$l8_oli_20131107.1,vec,fun=box)
extract(l8$l8_oli_20131107.1,vec,fun=boxplot)
extract(l8,vec,fun=boxplot)
box <- extract(l8,vec,fun=boxplot)
box[1]
box[2]
box[3]
box[4]
box[1:6]
show(box[1:6])
plot(box[1:6])
View(box)
View(box)
View(box)
b1 <- extract(l8,vec,fun=boxplot)
b1
show(b1)
vec <- readOGR(dsn="./",layer = "pepe2")
extract(l8,vec,fun=mean)
extract(l8,vec,fun=c("mean","sd"))
extract(l8,vec)
data <- extract(l8,vec)
summary(data)
data1 <- extract(l8,vec)
data1
data <- extract(l8$l8_oli_20131107.4,vec)
data
summary(data)
mean(data)
mean(data1)
data
data[1]
mean(data[1])
pepe <- as.data.frame(data)
pepe
as.matrix(data[1])
as.array(data[1])
mean(as.array(data[1]))
library(reshape)
library(reshape2)
pepe <- melt(data)
pepe
unique(pepe)
unique(pepe$L1)
boxplot(pepe)
boxplot(pepe$value)
boxplot(x = pepe$L1, y=pepe$value)
box(pepe)
plot(pepe)
graphics::boxplot(pepe)
aggregate(pepe)
aggregate(pepe, FUN=mean)
aggregate(pepe, FUN=mean, by= L1)
aggregate(pepe, FUN=mean, by= "L1")
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)[2]
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)[1]
aggregate(pepe$value, FUN=list(pepe$L1), FUN=mean)
aggregate(pepe$value, by=list(pepe$L1), FUN=mean)
aggregate(pepe$value, by=list(pepe$L1), FUN=c(mean,sd))
aggregate(pepe$value, by=list(pepe$L1), FUN= function(x) c(mn = mean(x), sd = sd(x) ) )
(5.4-x)*(6.1-x)-4.5**2=0
(5.4-x)*(6.1-x)-4.5**2
eigen(cbind(c(5.4,4.5), c(4.5,6.1)))
cbind(c(5.4,4.5), c(4.5,6.1))
A<-cbind(c(5.4,4.5), c(4.5,6.1))
eigen(A)
A<-cbind(c(28.0,4.2), c(4.2,16.4))
eigen(A)
10.26+1.24
1.24/11.5
29.36+15.04
15.04/44.4
install.packages("hsdar")
#install.packages("hsdar")
install.packages("hsdar")
library(landsat)
library(raster)
nov3 <- as.data.frame(raster("LT52280791989017CUB00/LT52280791989017CUB00_B3.TIF"))
nov4 <- as.data.frame(raster("LT52280791989017CUB00/LT52280791989017CUB00_B4.TIF"))
BSL(nov3,nov4)
plot(as.vector(as.matrix(nov3)), as.vector(as.matrix(nov4)))
abline(nov.bsl$BSL, col="red")
nov.bsl <- BSL(nov3,nov4)
nov.bsl
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
nov3
nov.bsl
1**2+1.05**2
sqrt(2.1025)
1/1.45
1.05/1.45
.6897/.7241
1**2+0.9525**2
1/1.9073
sqrt(1**2+0.9525**2)
1/1.3810
0.9525/1.3810
0.6897**2+0.7241**2
0.7241**2+0.6897**2
0.6897*0.7241*0.7241*0.6897
0.6897*0.7241-0.7241*0.6897
library(raster)
library(landsat)
brick("test/curso2/LT52300771992104CUB00/LT52300771992104CUB00 (copy).vrt")
l5 <- brick("test/curso2/LT52300771992104CUB00/LT52300771992104CUB00 (copy).vrt")
nov.bsl <- BSL(as.matrix(l5$LT52300771992104CUB00_.copy..3),as.matrix(l5$LT52300771992104CUB00_.copy..4) )
nov.bsl
plot(l5$LT52300771992104CUB00_.copy..3, l5$LT52300771992104CUB00_.copy..4)
abline(nov.bsl$BSL, col="red")
points(nov.bsl$top[1], nov.bsl$top[2], col="green", cex=2, pch=16)
demo()
Hershey
Hershey()
plotmath
plotmath()
persp
persp()
error.chatching
library(raster)
library(RStoolbox)
library(landsat)
library(RColorBrewer)
library(rgdal)
library(ggplot2)
library(GGally)
setwd("~/Documents/curso-sopi-herramientas-cuantitativas/material")
# Abrimos la imagen landsat 8
xml.2016 <- readMeta("raster_data/LC82240782016304/LC82240782016304LGN00.xml")
ref.2016 <- stackMeta(xml.2016, quantity = "sre")
scaleF <- getMeta(ref.2016, xml.2016, what = "SCALE_FACTOR")
ref.2016 <- ref.2016 * scaleF
ref.2016 <- ref.2016[[-1,]]
names(ref.2016) <- c("blue","green","red","nir","swir1","swir2")
plot(ref.2016)
raster("raster_data/S2A_biophys/S2A_biophys.gri")
raster("raster_data/S2A_biophys/S2A_biophys.grd")
brick("raster_data/S2A_biophys/S2A_biophys.grd")
vector <- readOGR(dsn="vector_data/", layer="muestreo")
indices.2016 <- spectralIndices(ref.2016, red="red", nir="nir", indices="NDVI")
indices.2016 <- spectralIndices(ref.2016, blue="blue",red="red", nir="nir", indices=c("NDVI","EVI"))
par( mfrow = c( 1, 1 ) )
plot(indices.2016,col=cols, zlim=c(0,1))
cols <- colorRampPalette(brewer.pal(9,"YlGn"))(16)
plot(indices.2016,col=cols, zlim=c(0,1))
vector
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[,-1],diag=list(continuous="barDiag"))
ggpairs(DF,diag=list(continuous="barDiag"))
indices.2016 <- spectralIndices(ref.2016, red="red", nir="nir")
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF,diag=list(continuous="barDiag"))
lmf.2015 <- lm(lai ~ NDVI,DF)
lmf.2016 <- lm(lai ~ NDVI,DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=SR))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
ggplot(data=DF, aes(x=NDVI,y=LAI))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
newSR.2015 <- predict(ndvi.2015,lmf.2015)
ggR(newSR.2015, geom_raster = TRUE)+
geom_point(data=vector.df,aes(x=coords.x1,y=coords.x2,colour=SR),size=5)+
scale_fill_gradientn(colours=cols)+
scale_colour_gradientn(colours=cols,guide = "none")+coord_equal()
newSR.2016 <- predict(indices.2016,lmf.2015)
ggR(newSR.2015, geom_raster = TRUE)+
geom_point(data=vector.df,aes(x=coords.x1,y=coords.x2,colour=SR),size=5)+
scale_fill_gradientn(colours=cols)+
scale_colour_gradientn(colours=cols,guide = "none")+coord_equal()
ggR(newSR.2016, geom_raster = TRUE)+
geom_point(data=vector.df,aes(x=coords.x1,y=coords.x2,colour=SR),size=5)+
scale_fill_gradientn(colours=cols)+
scale_colour_gradientn(colours=cols,guide = "none")+coord_equal()
ggR(newSR.2016, geom_raster = TRUE)+
scale_fill_gradientn(colours=cols)+
scale_colour_gradientn(colours=cols,guide = "none")+coord_equal()
ggpairs(DF[7:],diag=list(continuous="barDiag"))
ggpairs(DF[,7:],diag=list(continuous="barDiag"))
ggpairs(DF[],diag=list(continuous="barDiag"))
ggpairs(DF[1:2],diag=list(continuous="barDiag"))
indices.2016 <- spectralIndices(ref.2016, blue="blue",red="red", nir="nir", indices=c("NDVI","EVI"))
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
DF
ggpairs(DF[c(1,6,7)],diag=list(continuous="barDiag"))
ggpairs(DF[c("lai",6,7)],diag=list(continuous="barDiag"))
ggpairs(DF[c("lai","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(lai ~ NDVI,DF)
lmf.2016
summary(lmf.2016)
lmf.2016 <- lm(lai ~ I(NDVI,DF))
lmf.2016 <- lm(lai ~ I(NDVI,DF))
lmf.2016 <- lm(lai ~ I(NDVI),DF)
summary(lmf.2016)
lmf.2016 <- lm(lai ~ I(sqrt(NDVI),DF)
DF$newSR <- predict.lm(lmf.2015)
# Grafico el modelo
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
# Aplico el modelo a una imagen y lo grafico
newSR.2016 <- predict(indices.2016,lmf.2015)
ggR(newSR.2016, geom_raster = TRUE)+
scale_fill_gradientn(colours=cols)
lmf.2016 <- lm(lai ~ I(sqrt(NDVI),DF)
DF$newSR <- predict.lm(lmf.2015)
# Grafico el modelo
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
# Aplico el modelo a una imagen y lo grafico
newSR.2016 <- predict(indices.2016,lmf.2015)
ggR(newSR.2016, geom_raster = TRUE)+
scale_fill_gradientn(colours=cols)
lmf.2016 <- lm(lai ~ I(sqrt(NDVI),DF))
lmf.2016 <- lm(lai ~ I(sqrt(NDVI),DF))
lmf.2016 <- lm(lai ~ I(sqrt(NDVI)),DF)
summary(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(lai ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(lai ~ I(exp(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(lai ~ I(exp(EVI)),DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(lai ~ I(log(EVI)),DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("lai","NDVI","EVI")],diag=list(continuous="barDiag"))
ggpairs(DF[c("lai_cab","NDVI","EVI")],diag=list(continuous="barDiag"))
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(EVI)),DF)
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2015)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
lmf.2016
summary(lmf.2016)
DF$newSR <- predict.lm(lmf.2015)
DF
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=lai))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
newSR.2016 <- predict(indices.2016,lmf.2015)
ggR(newSR.2016, geom_raster = TRUE)+
scale_fill_gradientn(colours=cols)
newSR.2016 <- predict(indices.2016,lmf.2016)
ggR(newSR.2016, geom_raster = TRUE)+
scale_fill_gradientn(colours=cols)
plot(newSR.2016, col=cols, zlim = c(0,1))
plot(newSR.2016, col=cols, zlim = c(0,2))
plot(newSR.2016, col=cols, zlim = c(0,1))
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
summary(lmf.2016)
lmf.2016 <- lm(fcover ~ NDVI),DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
lmf.2016 <- lm(fcover ~ NDVI,DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
summary(lmf.2016)
indices.2016 <- spectralIndices(ref.2016, red="red", nir="nir")
plot(indices.2016,col=cols, zlim=c(0,1))
ggpairs(DF[c("fcover","NDVI","EVI2", "MSAVI", "MSVAVI2")],diag=list(continuous="barDiag"))
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI2", "MSAVI", "MSVAVI2")],diag=list(continuous="barDiag"))
DF
ggpairs(DF[c("fcover","NDVI","EVI2", "MSAVI", "MSAVI2")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ NDVI,DF)
indices.2016 <- spectralIndices(ref.2016, red="red", nir="nir", swir1 = "swir1")
plot(indices.2016,col=cols, zlim=c(0,1))
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("lai_cw","NDVI","WDVI")],diag=list(continuous="barDiag"))
ggpairs(DF[c("lai"*"lai_cw","NDVI","WDVI")],diag=list(continuous="barDiag"))
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
indices.2016 <- spectralIndices(ref.2016, blue="blue",red="red", nir="nir", indices=c("NDVI","EVI"))
vector <- readOGR(dsn="vector_data/", layer="muestreo")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
lmf.2016
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
newSR.2016 <- predict(indices.2016,lmf.2016)
newSR.2016
brick("raster_data/S2A_biophys/S2A_biophys.gri")
test <- brick("raster_data/S2A_biophys/S2A_biophys.gri")
stack(newSR.2016$layer, test$fcover)
newSR.2016@data
newSR.2016@data@values
newdata <- newSR.2016
newdata@data@values <- test$fapar@data@values
stack(newSR.2016, newdata)
plot(stack(newSR.2016, newdata))
stack(newSR.2016$layer, test$fcover)
test@extent <- newSR.2016@extent
stack(newSR.2016$layer, test$fcover)
pepe <- stack(newSR.2016$layer, test$fcover)
pepe$layer[pepe$layer<=0] <- 0
pepe
plot(pepe)
plot(pepe$layer-pepe$fcover)
hist(pepe$layer-pepe$fcover)
plot(pepe$layer-pepe$fcover)
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
DF[DF<0]
DF[DF<=0] <- NA
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
DF
rm.NA(DF)
rm.na(DF)
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
DF2 <- DF[DF>0]
DF2
DF2 <- DF[DF$NDVI>0]
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
vector <- readOGR(dsn="vector_data/", layer="muestreo2")
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ I(sqrt(NDVI)),DF)
DF$newSR <- predict.lm(lmf.2016)
vecto
datos <- extract(indices.2016,vector)
DF <- data.frame(vector@data,datos)
ggpairs(DF[c("fcover","NDVI","EVI")],diag=list(continuous="barDiag"))
lmf.2016 <- lm(fcover ~ NDVI,DF)
DF$newSR <- predict.lm(lmf.2016)
ggplot(data=DF, aes(x=NDVI,y=fcover))+geom_point()+geom_smooth(aes(x=NDVI,y=newSR))
newSR.2016 <- predict(indices.2016,lmf.2016)
plot(newSR.2016, col=cols, zlim = c(0,1))
