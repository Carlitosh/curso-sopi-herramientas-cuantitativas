ggR(landsat5_stack,layer = 1:5, geom_raster = TRUE)+scale_fill_gradientn(limits = c(0,156),colours=rainbow(100))
ggR(landsat5_stack,layer = 3, geom_raster = TRUE)+ggR(landsat5_stack,layer = 4, geom_raster = TRUE+scale_fill_gradientn(limits = c(0,156),colours=rainbow(100))
)
ggR(landsat5_stack,layer = 3, geom_raster = TRUE)+ggR(landsat5_stack,layer = 4, geom_raster = TRUE) +scale_fill_gradientn(limits = c(0,156),colours=rainbow(100))
?ggR
ggR(landsat5_stack,layer = 3, geom_raster = TRUE)+ggR(landsat5_stack,layer = 4, geom_raster = TRUE) +scale_fill_gradientn(limits = c(0,156),colours=rainbow(100))+coord_equal()
ggR(landsat5_stack,layer = 3, geom_raster = TRUE)
ggR(landsat5_stack,layer = 3, geom_raster = TRUE)+scale_fill_gradientn(colours=rainbow(100))
ggRGB(landsat5_stack,r=3, g=2, b=1, geom_raster = TRUE)
ggRGB(landsat5_stack,r=3, g=2, b=1, geom_raster = TRUE, stretch = "lin")
ggRGB(landsat5_stack,r=3, g=2, b=1, geom_raster = TRUE, stretch = "lin")+ggRGB(landsat5_stack,r=4, g=5, b=3, geom_raster = TRUE, stretch = "lin")
ggR(landsat5_stack,layer = "nir", geom_raster = TRUE)+scale_fill_gradientn(colours=rainbow(100))
ggR(landsat5_stack,layer = "nir", geom_raster = TRUE, ggLayer = TRUE)
nir <- ggR(landsat5_stack,layer = "nir", geom_raster = TRUE, ggLayer = TRUE)
red <- ggR(landsat5_stack,layer = "red", geom_raster = TRUE, ggLayer = TRUE)
ggplot()+nir+red
ggplot()+nir+red+coord_equal()
ggplot()+red
ggplot()+nir
ggplot(data = landsat5_stack, aes(x=red, y=nir))
plot(landsat5_stack$red, landsat5_stack$nir)
plot(landsat5_stack$red, landsat5_stack$nir)
plot(landsat5_stack$red, landsat5_stack$nir)
?raster::plot
plot(landsat5_stack$red, landsat5_stack$nir, nc=1, nr=1)
plot(data=landsat5_stack, x=red, y=nir)
plot(data=landsat5_stack, x="red", y="nir")
plot(landsat5_stack)
scatter.smooth(landsat5_stack)
hist(landsat5_stack)
plot(landsat5_stack$nir, landsat5_bands$nir)
plot(landsat5_stack$nir, landsat5_stack$nir)
plot(landsat5_stack$red, landsat5_stack$nir)
?plot
plot(landsat5_stack$red, landsat5_stack$nir, add=TRUE)
plot(landsat5_stack$red, landsat5_stack$nir, add=FALSE)
plot(landsat5_stack$red, landsat5_stack$nir, add=FALSE)
par( mfrow = c( 1, 1 ) )
plot(landsat5_stack$red, landsat5_stack$nir)
plot(landsat5_stack$red, landsat5_stack$green)
hist(landsat5_stack$green)
plot(landsat5_stack$red, landsat5_stack$nir)
hist(landsat5_stack)
plot(landsat5_stack$red, landsat5_stack$nir)
par( mfrow = c( 1, 1 ) )
plot(landsat5_stack$red, landsat5_stack$green)
pairs(landsat5_stack)
?pairs
plot(landsat5_stack$red, landsat5_stack$nir)
library(rgdal)
vector <- readOGR(dsn="vector_data/", layer="extract")
vector
vector <- readOGR(dsn="vector_data/", layer="extract")
vector
vector <- readOGR(dsn="vector_data/", layer="zonas")
vector
points(landsat5_stack$red[vector],landsat5_stack$nir[vector])
vector$id
vector$descripcio
plot(vector)
vector_ras <- rasterize(vector, landsat5_stack, field="id")
vector_ras
vector_ras
summary(vector_ras)
vector
extract(landsat5_stack,vector)
vector
landsat5_stack
vector <- readOGR(dsn="vector_data/", layer="extract")
vector
vector_ras <- rasterize(vector, landsat5_stack, field="id")
vector_ras
plot(vector_ras)
extract(landsat5_stack,vector)
plot(landsat5_stack$red, landsat5_stack$nir)
data <- extract(landsat5_stack,vector)
datos <- extract(landsat5_stack,vector)
points(datos$red, datos$nir)
plot(datos$red, datos$nir)
datos
datos$1
datos[1]
datos[1]$red
datos[1][1]
as.data.frame(datos)
as.data.frame(datos[1])
as.data.frame(datos[1])$nir
plot(datos$red, datos$nir)
plot(landsat5_stack$red, landsat5_stack$nir)
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir)
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir, color="green")
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="red")
landsat5_stack
vector
datos
summary(datos[1])
summary(as.data.frame(datos)[1])
summary(as.data.frame(datos[1]))
sd(as.data.frame(datos[1]))
plot(landsat5_stack$red, landsat5_stack$nir)
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="red")
promedio <- extract(landsat5_stack,vector, fun=mean)
promedio
sd <- extract(landsat5_stack,vector, fun=sd)
sd
names(promedio)
names(promedio)
promedio
promedio@names
colnames(promedio)
colnames(promedio)<paste("Mean", colnames(promedio), sep = "_")
colnames(promedio) <- paste("Mean", colnames(promedio), sep = "_")
colnames(promedio)
vector@data
vector@data
vector@data <- cbind(vector@data, promedio, desvio)
promedio <- extract(landsat5_stack,vector, fun=mean)
colnames(promedio) <- paste("mean", colnames(promedio), sep = "_")
desvio <- extract(landsat5_stack,vector, fun=sd)
colnames(desvio) <- paste("sd", colnames(desvio), sep = "_")
desvio
desvio <- extract(landsat5_stack,vector, fun=sd)
desvio <- extract(landsat5_stack,vector, fun=sd)
colnames(desvio) <- paste("sd", colnames(desvio), sep = "_")
vector
vector@data
vector@data <- cbind(vector@data, promedio, desvio)
vector@data
writeOGR(vector, dsn="vector_data/processed/", "datos", driver="ESRI Shapefile")
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")
vector
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group="descripcio"))+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group="descripcio"),col="green")+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group="descripcio"),col="green")+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group="id"),col="green")+
coord_equal()
poligono
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group="id"))+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group="id",col="id"))+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group=id))+
coord_equal()
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_polygon(data=poligono, aes(x=long,y=lat,group=id))+
coord_equal()
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group="id"),col="green")+
coord_equal()
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group=id),col="green")+
coord_equal()
library(raster)
library(RStoolbox)
library(ggplot2)
landsat5_b3 <- raster("raster_data/LT52280792011014CUB00/LT52280792011014CUB00_B3.TIF")
landsat5_b4 <- raster("raster_data/LT52280792011014CUB00/LT52280792011014CUB00_B4.TIF")
landsat5_brick <- brick("raster_data/LT52280792011094CUB00/LT52280792011094CUB00.vrt")
landsat5_bands <- list.files("raster_data/LT52280792011094CUB00/", pattern = "*[^6].TIF$", full.names = TRUE)
landsat5_stack <- stack(landsat5_bands)
landsat5_stack
nombres <- c("blue","green","red","nir","swir1","swir2")
names(landsat5_stack) <- nombres
landsat5_stack
landsat5_stack
summary(landsat5_stack)
extent(landsat5_stack)
ggR(landsat5_stack,layer = "nir", geom_raster = TRUE)+scale_fill_gradientn(colours=rainbow(100))
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")
hist(landsat5_stack$green)
hist(landsat5_stack)
plot(landsat5_stack$red, landsat5_stack$nir)
par( mfrow = c( 1, 1 ) )
par( mfrow = c( 1, 1 ) )
plot(landsat5_stack$red, landsat5_stack$nir)
library(rgdal)
vector <- readOGR(dsn="vector_data/", layer="extract")
vector
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group=id),col="green")+
coord_equal()
datos <- extract(landsat5_stack,vector)
plot(landsat5_stack$red, landsat5_stack$nir)
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="red")
promedio <- extract(landsat5_stack,vector, fun=mean)
colnames(promedio) <- paste("mean", colnames(promedio), sep = "_")
desvio <- extract(landsat5_stack,vector, fun=sd)
colnames(desvio) <- paste("sd", colnames(desvio), sep = "_")
vector@data <- cbind(vector@data, promedio, desvio)
writeOGR(vector, dsn="vector_data/processed/", "datos", driver="ESRI Shapefile")
vector@data
vector@data[mean_*]
y = as.vector(c(1,2,3,4,5))
x = as.vector(c(1,2,3,4,5))
plot(x,y)
grep("mean*", colnames(vector@data))
vector@data[grep("mean*", colnames(vector@data))}
vector@data[grep("mean*", colnames(vector@data))]
vector@data[grep("mean*", colnames(vector@data))][0]
vector@data[grep("mean*", colnames(vector@data))][1]
vector@data[grep("mean*", colnames(vector@data))][,1]
vector@data[grep("mean*", colnames(vector@data))][,0]
vector@data[grep("mean*", colnames(vector@data))][,]
vector@data[grep("mean*", colnames(vector@data))][0,]
vector@data[grep("mean*", colnames(vector@data))][,1:4]
vector@data[grep("mean*", colnames(vector@data))][,1:6]
vector@data[grep("mean*", colnames(vector@data))][1,1:6]
vector@data[grep("mean*", colnames(vector@data))][2,1:6]
x = as.vector(c(1,2,3,4,5,6))
vector@data[grep("mean*", colnames(vector@data))][2,1:6]
y <- vector@data[grep("mean*", colnames(vector@data))][2,1:6]
plot(x,y)
y <- vector@data[grep("mean*", colnames(vector@data))]
plot(x,y)
plot(x,y[1])
plot(x,y[1,])
matplot(x,y[1,])
matplot(x,y)
t(y)
plot(x,t(y))
promedios <- vector@data[grep("mean*", colnames(vector@data))]
promedios
vector@data
vector@data$descripcio
promedios
desvios
desvio
promedio <- extract(landsat5_stack,vector, fun=mean)
colnames(promedio) <- paste("mean", colnames(promedio), sep = "_")
promedio
t(promedio)
t(promedio,desvio)
y <- t(promedio)
names(y)
colnames(y)
rownames(y)
colnames(y) <- vector@data$descripcio
rownames(y)
y
plot(y)
plot(y[:])
x
plot(x,y)
plot(x,y[,1:6])
plot(x,y[,])
plot(x,y[1:6,])
plot(x,y[,1])
rownames(y) <- c(485,56,660,830,1650,2215)
y
rownames(y) <- c(485,560,660,830,1650,2215)
y <- t(promedio)
colnames(y) <- vector@data$descripcio
rownames(y) <- c(485,56,660,830,1650,2215)
t <- as.data.frame(y)
y
t
plot(t)
y <- t(promedio)
colnames(y) <- vector@data$descripcio
y$wl <- c(485,56,660,830,1650,2215)
y
y <- t(promedio)
colnames(y) <- vector@data$descripcio
y$wl <- as.data.frame(c(485,56,660,830,1650,2215))
y
# Graficar las firmas espectrales
y <- t(promedio)
colnames(y) <- vector@data$descripcio
y
y <- as.data.frame(y)
y
y <- t(promedio)
colnames(y) <- vector@data$descripcio
y <- as.data.frame(y)
y$wl <- as.data.frame(c(485,56,660,830,1650,2215))
y
c
c(485,56,660,830,1650,2215)
y.vars
y
names(y)
names$wl
as.matrix(c(485,56,660,830,1650,2215))
y$wl <- as.matrix(c(485,56,660,830,1650,2215))
y
df <- melt(y ,  id.vars = 'wl', variable.name = 'series')
library(reshape2)
df <- melt(y ,  id.vars = 'wl', variable.name = 'series')
df
# Graficar las firmas espectrales
df <- t(promedio)
colnames(df) <- vector@data$descripcio
df <- as.data.frame(df)
df$wl <- as.matrix(c(485,560,660,830,1650,2215))
df <- melt(y ,  id.vars = 'wl', variable.name = 'series')
df
ggplot(df, aes(time,value)) + geom_line(aes(colour = series))
ggplot(df, aes(wl,value)) + geom_line(aes(colour = series))
ggplot(df, aes(wl,value)) + geom_poins(aes(colour = series))
ggplot(df, aes(wl,value)) + geom_points(aes(colour = series))
ggplot(df, aes(wl,value)) + geom_point(aes(colour = series))
# Graficar las firmas espectrales
df <- t(promedio)
colnames(df) <- vector@data$descripcio
df <- as.data.frame(df)
df$wl <- as.matrix(c(485,560,660,830,1650,2215))
df <- melt(y ,  id.vars = 'wl', variable.name = 'ref')
ggplot(df, aes(wl,value)) + geom_point(aes(colour = ref))
# Graficar las firmas espectrales
df <- t(promedio)
colnames(df) <- vector@data$descripcio
df <- as.data.frame(df)
df$wl <- as.matrix(c(485,560,660,830,1650,2215))
df <- melt(y ,  id.vars = 'wl', variable.name = 'Cobertura')
ggplot(df, aes(wl,value)) + geom_point(aes(colour = Cobertura))
df <- t(promedio)
colnames(df) <- vector@data$descripcio
df <- as.data.frame(df)
df$wl <- as.matrix(c(485,560,660,830,1650,2215))
df <- melt(dfd ,  id.vars = 'wl', variable.name = 'Cobertura')
dfd <- t(desvio)
colnames(dfd) <- vector@data$descripcio
dfd <- as.data.frame(df)
dfd$wl <- as.matrix(c(485,560,660,830,1650,2215))
dfd <- melt(dfd ,  id.vars = 'wl', variable.name = 'Cobertura')
df
dfd
df <- melt(df ,  id.vars = 'wl', variable.name = 'Cobertura')
df
dfd
names(df)
names(df) <- c("wl,"Cobertura","Reflectancia")
names(df) <- c("wl","Cobertura","Reflectancia")
df
names(dfd) <- c("wl","Cobertura","Desvio")
dfd
dfd <- t(desvio)
colnames(dfd) <- vector@data$descripcio
dfd <- as.data.frame(dfd)
dfd$wl <- as.matrix(c(485,560,660,830,1650,2215))
dfd <- melt(dfd ,  id.vars = 'wl', variable.name = 'Cobertura')
names(dfd) <- c("wl","Cobertura","Desvio")
dfd
df$desvio <- dfd$Desvio
df
ggplot(df, aes(wl,Reflectancia)) + geom_point(aes(colour = Cobertura))
ggplot(df, aes(wl,Reflectancia))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-Desvio, ymax=Reflectancian+Desvio), width=.1, position=pd)
ggplot(df, aes(wl,Reflectancia))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-Desvio, ymax=Reflectancian+Desvio), width=.1)
df
ggplot(df, aes(wl,Reflectancia))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-desvio, ymax=Reflectancian+desvio), width=.1)
ggplot(df, aes(wl,Reflectancia))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-desvio, ymax=Reflectancia+desvio), width=.1)
ggplot(df, aes(wl,Reflectancia))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-2*desvio, ymax=Reflectancia+2*desvio), width=.1)
ggplot(df, aes(wl,Reflectancia))+
geom_line(aes(colour = Cobertura))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-2*desvio, ymax=Reflectancia+2*desvio), width=.1)
## Manejo raster
# Cargamos la libreria para manejo de rasters
library(raster)
library(RStoolbox)
library(ggplot2)
# Apertura de una banda
landsat5_b3 <- raster("raster_data/LT52280792011014CUB00/LT52280792011014CUB00_B3.TIF")
landsat5_b4 <- raster("raster_data/LT52280792011014CUB00/LT52280792011014CUB00_B4.TIF")
# Apertura de un raster multibanda
landsat5_brick <- brick("raster_data/LT52280792011094CUB00/LT52280792011094CUB00.vrt")
# Apertura de varios raster como stack, no stackeamos la banda 6
landsat5_bands <- list.files("raster_data/LT52280792011094CUB00/", pattern = "*[^6].TIF$", full.names = TRUE)
landsat5_stack <- stack(landsat5_bands)
# Inspeccionar elemento
landsat5_stack
# Cambiar nombres
nombres <- c("blue","green","red","nir","swir1","swir2")
names(landsat5_stack) <- nombres
landsat5_stack
# Mas informacion sobre el elemento
landsat5_stack
summary(landsat5_stack)
extent(landsat5_stack)
# Grafico de una banda
ggR(landsat5_stack,layer = "nir", geom_raster = TRUE)+scale_fill_gradientn(colours=rainbow(100))
# Grafico combinacion de bandas
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")
# Grafico el histograma de una banda
hist(landsat5_stack$green)
# Histograma de todas las bandasa
hist(landsat5_stack)
# Scatterplot de dos bandas
plot(landsat5_stack$red, landsat5_stack$nir)
# Si se queda en 3*2
par( mfrow = c( 1, 1 ) )
# Todos los scatterplots e histogramas (toma su tiempo)
pairs(landsat5_stack)
## Manejo vectorial
library(rgdal)
# Apertura de shapefile
vector <- readOGR(dsn="vector_data/", layer="extract")
# inspeccionar elemento
vector
# Graficar raster y vector
poligono <- fortify(vector)
ggRGB(landsat5_stack,r="nir", g="red", b="blue", geom_raster = TRUE, stretch = "lin")+
geom_path(data=poligono, aes(x=long,y=lat,group=id),col="green")+
coord_equal()
# Extraer informacion de un vector
datos <- extract(landsat5_stack,vector)
# Plotear los datos en un scatterplot
plot(landsat5_stack$red, landsat5_stack$nir)
points(as.data.frame(datos[1])$red,as.data.frame(datos[1])$nir, col="green")
points(as.data.frame(datos[2])$red,as.data.frame(datos[2])$nir, col="red")
# Extraer datos
promedio <- extract(landsat5_stack,vector, fun=mean)
colnames(promedio) <- paste("mean", colnames(promedio), sep = "_")
desvio <- extract(landsat5_stack,vector, fun=sd)
colnames(desvio) <- paste("sd", colnames(desvio), sep = "_")
# Guardar datos en el vector
vector@data <- cbind(vector@data, promedio, desvio)
writeOGR(vector, dsn="vector_data/processed/", "datos", driver="ESRI Shapefile")
# Graficar las firmas espectrales con su desvio standar
#Convertir en data frame
df <- t(promedio)
colnames(df) <- vector@data$descripcio
df <- as.data.frame(df)
df$wl <- as.matrix(c(485,560,660,830,1650,2215))
df <- melt(df ,  id.vars = 'wl', variable.name = 'Cobertura')
names(df) <- c("wl","Cobertura","Reflectancia")
dfd <- t(desvio)
colnames(dfd) <- vector@data$descripcio
dfd <- as.data.frame(dfd)
dfd$wl <- as.matrix(c(485,560,660,830,1650,2215))
dfd <- melt(dfd ,  id.vars = 'wl', variable.name = 'Cobertura')
names(dfd) <- c("wl","Cobertura","Desvio")
# Agregar el desvio
df$desvio <- dfd$Desvio
# Graficar
ggplot(df, aes(wl,Reflectancia))+
geom_line(aes(colour = Cobertura))+
geom_point(aes(colour = Cobertura))+
geom_errorbar(aes(ymin=Reflectancia-2*desvio, ymax=Reflectancia+2*desvio), width=.1)
cor(landsat5_stack$red, landsat5_stack$nir)
# Si se queda en 3*2
par( mfrow = c( 1, 1 ) )
# Scatterplot de dos bandas
plot(landsat5_stack$red, landsat5_stack$nir)
library(landsat)
b3 <- as.matrix(landsat5_stack$red)
b4 <- as.matrix(landsat5_stack$nir)
BSL(b3,b4)
l5.bsl <- BSL(b3,b4)
l5.bsl
abline(l5.bsl$BSL, col="red")
points(l5.bsl$top[1], l5.bsl$top[2], col="green", cex=2, pch=16)
points(l5.bsl$top[1], l5.bsl$top[2], col="green", cex=2, pch=16)
library(raster)
library(RStoolbox)
library(ggplot2)
landsat5_b3 <- raster("raster_data/LT52280792011014CUB00/LT52280792011014CUB00_B3.TIF")
library(raster)
library(RStoolbox)
library(ggplot2)
landsat5_b3 <- raster("raster_data/LT52280791988079CUB00/LT52280791988079CUB00_B4.TIF")
setwd("~/Documents/curso-sopi-herramientas-cuantitativas/material")
landsat5_b3 <- raster("raster_data/LT52280791988079CUB00/LT52280791988079CUB00_B4.TIF")
setwd("~/Documents/curso-sopi-herramientas-cuantitativas/material")
landsat5_b3 <- raster("raster_data/LT52280791988079CUB00/LT52280791988079CUB00_B4.TIF")
landsat5_b3 <- raster("raster_data/LT52280791988079CUB00/LT52280791988079CUB00_B4.TIF")
landsat5_b4 <- raster("raster_data/LT52280792011078CUB00/LT52280792011078CUB00_B4.TIF")
landsat5_brick <- brick("raster_data/LT52280792011078CUB00/LT52280792011078CUB00.vrt")
landsat5_bands <- list.files("raster_data/LT52280792011078CUB00/", pattern = "*[^6].TIF$", full.names = TRUE)
landsat5_stack <- stack(landsat5_bands)
landsat5_stack
nombres <- c("blue","green","red","nir","swir1","swir2")
names(landsat5_stack) <- nombres
landsat5_stack
landsat5_stack
summary(landsat5_stack)
extent(landsat5_stack)
ggR(landsat5_stack,layer = "nir", geom_raster = TRUE)+scale_fill_gradientn(colours=rainbow(100))
